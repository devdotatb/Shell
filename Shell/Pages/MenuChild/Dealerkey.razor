@page "/dealerkey"
@using Shell.Model
@using ClosedXML.Excel
@using Shell.Data
@using Shell.Model
@inject IJSRuntime js

@using Microsoft.Extensions.Configuration
@using Shell.XLS
@inject IConfiguration Configuration

<h3>dealerkey</h3>
<div id="page-wrapper">
    <div class="container-fluid">
        <div class="modal-body">
            <div class="row">
                <div class="col-xs-9"></div>
                <div class="col-xs-3"><a class="btn btn-default btn-block hidden" id="selectall">เลือกทั้งหมด</a></div>
            </div>
            <div>&nbsp;</div>
            <div class="row">
                <div class="col-xs-12">
                    <table class="dataTable table-bordered table-striped table-condensed tables" style="width:100%;">
                        <thead>
                        <th><input type="checkbox" id="checkall" /></th>
                        <th>รหัสผู้ใช้งาน</th>
                        <th>ชื่อร้านค้า</th>
                        <th>เขต</th>
                        <th>ประเภท</th>
                        <th>ประเภทย่อย</th>
                        </thead>
                        <tbody>
                            @foreach (var each_item in searchDataPaged)
                            {
                                <tr>
                                    <td align="center"><input type="checkbox" class="table-checkbox"/></td>
                                    <td>@each_item.ACode</td>
                                    <td>@each_item.ShopName</td>
                                    <td>@each_item.Site</td>
                                    <td>@each_item.ShopType</td>
                                    <td>@each_item.Tier</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="modal-footer" style="border:0;">
            <div class="row">
                <div class="col-xs-12">
                    <textarea id="txtcopy" rows="4" cols="1" class="form-control"></textarea>
                </div>
            </div>
        </div>
        <div>&nbsp;</div>
    </div>
</div>
@code {
    public List<DealerkeySearchData> searchData_iquery;
    public List<DealerkeySearchData> searchDataPaged;
    
    [Inject]
    private IConfiguration configuration { get; set; }
    private int pageSize = 5;
    private int pageNumber = 1;
    private int totalPage;

    /*
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("Dealerkeyjs");
        await base.OnAfterRenderAsync(firstRender);
    }*/

    protected override void OnInitialized()
    {
        this.pageSize = int.Parse(configuration["PageSize"]);
        using (var db = new SHELLREGContext())
        {
            var query = this.QuerySearch(db);
            var filtered = this.Specify(query);
            this.SetData(filtered);
        }
    }
    
    IEnumerable<DealerkeySearchData> QuerySearch(SHELLREGContext db)
    {
        var query = (
            from TradeOwner in db.TradeOwners.Where(t1 => !string.IsNullOrWhiteSpace(t1.Acode))

            select new DealerkeySearchData()
                {
                    ACode = TradeOwner.Acode,
                    ShopName = TradeOwner.ShopName,
                    Site = TradeOwner.Site,
                    ShopType = TradeOwner.ShopType,
                    Tier = TradeOwner.Tier,
                }
        );
        return query;
    }

    IEnumerable<DealerkeySearchData> Specify(IEnumerable<DealerkeySearchData> query)
    {
        var filtered = query;
        return filtered;
    }

    void SetData(IEnumerable<DealerkeySearchData> query)
    {
        this.pageNumber = 1;
        this.searchData_iquery = query.ToList();
        this.totalPage = (int)Math.Ceiling(query.Count() / (pageSize * 1.00));
        this.searchDataPaged = this.searchData_iquery.Skip((pageNumber - 1) * pageSize).Take(pageSize).ToList();
    }

}

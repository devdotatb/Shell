@page "/useredit"


<link href="Resource/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
<link href="Resource/css/sb-admin.css" rel="stylesheet" type="text/css" />
<link href="Resource/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
@*<link href="Resource/css/bootstrap-datepicker.css" rel="stylesheet" type="text/css" />*@
<link href="Resource/css/cos.css" rel="stylesheet" type="text/css" />
<link href="Resource/css/bootstrap-radio.css" rel="stylesheet" type="text/css" />
@code {
    private bool IsAuthorizedSucceed = false;

    async Task history_back()
    {
        await js.InvokeAsync<object>("test.historyGo", -1);
    }
}
@if (IsAuthorizedSucceed == false)
{
    <br />
    <br />
    <center>ท่านไม่ได้รับสิทธิในการใช้งานส่วนนี้ <a href="" @onclick="history_back" @onclick:preventDefault>ย้อนกลับ</a></center>
}
@if (IsAuthorizedSucceed == true)
{
    <div id="page-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12 title-head">
                    <h1><img src="Resource/img/config.png" alt="" />ทะเบียนผู้ใช้งานระบบ</h1>
                </div>
            </div>
            @if (diverror_Visible)
            {
                <div id="diverror" visible="false" class="alert alert-danger" role="alert">@lblMsg</div>
            }
            <div class="row">
                <div class="col-md-1">&nbsp;</div>
                <div class="col-md-10">
                    <div class="panel panel-default">
                        <div class="panel-heading">กำหนดผู้ใช้งานระบบ</div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-6 rows">
                                    <div class="input-group input-daterange">
                                        <span class="input-group-addon edit-text">รหัสผู้ใช้</span>
                                        <input type="text" id="username" class="form-control"
                                           @bind="username_Text"
                                           disabled="@username_ReadOnly"
                                           MaxLength="12" OnTextChanged="username_TextChanged" AutoPostBack="true" />
                                        <span class="validate-text">*</span>
                                    </div>
                                </div>
                                @if (divuser_Visible)
                                {
                                    <div class="col-md-6 text-column" id="divuser" visible="false">รหัสผู้ใช้ไม่ควรเกิน 12 ตัวอักษรเพื่อจดจำได้ง่าย</div>
                                }
                                @if (divreset_Visible)
                                {
                                    <div class="col-md-6 rows" id="divreset">
                                        <button id="btnReset" @onclick="btnReset_Click" class="btn btn-danger">Reset Password</button>
                                    </div>
                                }
                            </div>
                            @if (divpass_Visible)
                            {
                                <div id="divpass" visible="false">
                                    <div class="row">
                                        <div class="col-md-6 rows">
                                            <div class="input-group input-daterange">
                                                <span class="input-group-addon edit-text">รหัสผ่าน</span>
                                                <input type="password" id="password" class="form-control" MaxLength="12" @bind="password_Text" />
                                                <span class="validate-text">*</span>
                                            </div>
                                        </div>
                                        <div class="col-md-6 text-column">รหัสผ่านไม่ควรเกิน 12 ตัวอักษรเพื่อจดจำได้ง่าย</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 rows">
                                            <div class="input-group input-daterange">
                                                <span class="input-group-addon edit-text"><span style="color:#FF0000">รหัสผ่านอีกครั้ง</span></span>
                                                <input type="password" id="password2" class="form-control" MaxLength="12" @bind="password_Text_again" />
                                                <span class="validate-text">*</span>
                                            </div>
                                        </div>
                                        <div class="col-md-6 text-column">ยืนยันรหัสผ่านของท่านอีกครั้ง</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div>&nbsp;</div>
                    <div class="panel panel-default">
                        <div class="panel-heading">ข้อมูลเบื้องต้นของผู้ใช้งานระบบ</div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-6 rows">
                                    <div class="input-group input-daterange">
                                        <span class="input-group-addon edit-text">ชื่อ-นามสกุล</span>
                                        <input type="text"
                                           @bind="fullname_Text"
                                           id="fullname" class="form-control" disabled="@fullname_ReadOnly" />
                                        <span class="validate-text">*</span>
                                    </div>
                                </div>
                                <div class="col-md-6 rows">
                                    <div class="input-group input-daterange">
                                        <span class="input-group-addon edit-text">เบอร์โทร</span>
                                        <input type="text" id="phone"
                                           @bind="phone_Text"
                                           class="form-control" disabled="@phone_ReadOnly" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 rows">
                                    <div class="input-group input-daterange">
                                        <span class="input-group-addon edit-text">ตำแหน่ง</span>
                                        <select id="position" class="form-control" @bind="position_SelectedValue" disabled="@position_disable">
                                            @foreach (var each in position_Items)
                                            {
                                                <option Value="@each.value">@each.text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6 rows">
                                    <div class="input-group input-daterange">
                                        <span class="input-group-addon edit-text">อีเมล์</span>
                                        <input type="text" id="email" class="form-control" disabled="@email_ReadOnly" @bind="email_Text" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 rows">
                                    <div class="input-group input-daterange">
                                        <span class="input-group-addon edit-text">สถานะ</span>
                                        <select id="status" class="form-control" @bind="status_SelectedValue" disabled="@status_disable">
                                            <option Value="active">active</option>
                                            <option Value="inactive">inactive</option>
                                        </select>
                                        <span class="validate-text">*</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div>&nbsp;</div>
                    <div class="row">
                        <div class="col-md-12">
                            <table class="col-md-12 table-bordered table-striped table-condensed tables">
                                @foreach (var eachmenu in Authorize_Menu)
                                {
                                    <thead>
                                        <tr>
                                            <th class="th-head" align="right">@eachmenu.Menu_Name</th>
                                            <th>
                                                <div class="checkbox checkbox-success">
                                                    <center>
                                                        &nbsp;
                                                        <input type="checkbox" id="Menu_Used@(eachmenu.Menu_id)" @bind="eachmenu.Menu_Used" disabled="@(act == "view")" />
                                                        <label for="Menu_Used@(eachmenu.Menu_id)">มีสิทธิใช้งาน</label>
                                                    </center>
                                                </div>
                                            </th>
                                            <th colspan="6"></th>
                                        </tr>
                                        <tr>
                                            <th>&nbsp;</th>
                                            <th>สร้างข้อมูล</th>
                                            <th>แก้ไขข้อมูล</th>
                                            <th>ดูข้อมูล</th>
                                            <th>ลบข้อมูล</th>
                                            <th>อนุมัติข้อมูล</th>
                                            <th>พิมพ์ข้อมูล</th>
                                            <th>นำข้อมูลออก</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var eachdoc in eachmenu.doclist)
                                        {
                                            <tr>
                                                <td>@eachdoc.doc_name</td>
                                                <td>
                                                    <div class="checkbox checkbox-success">
                                                        <center>
                                                            &nbsp;
                                                            @if (eachdoc.create_per == true)
                                                            {
                                                                <input type="checkbox" id="create_per_@eachdoc.doc_id" @bind="eachdoc.create_check" disabled="@(act == "view")" />
                                                                <label for="create_per_@eachdoc.doc_id"></label>
                                                            }
                                                        </center>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="checkbox checkbox-success">
                                                        <center>
                                                            &nbsp;
                                                            @if (eachdoc.edit_per == true)
                                                            {
                                                                <input type="checkbox" id="edit_per_@eachdoc.doc_id" @bind="eachdoc.edit_check" disabled="@(act == "view")" />
                                                                <label for="edit_per_@eachdoc.doc_id"></label>
                                                            }
                                                        </center>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="checkbox checkbox-success">
                                                        <center>
                                                            &nbsp;
                                                            @if (eachdoc.view_per == true)
                                                            {
                                                                <input type="checkbox" id="view_per_@eachdoc.doc_id" @bind="eachdoc.view_check" disabled="@(act == "view")" />
                                                                <label for="view_per_@eachdoc.doc_id"></label>
                                                            }
                                                        </center>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="checkbox checkbox-success">
                                                        <center>
                                                            &nbsp;
                                                            @if (eachdoc.delete_per == true)
                                                            {
                                                                <input type="checkbox" id="delete_per_@eachdoc.doc_id" @bind="eachdoc.delete_check" disabled="@(act == "view")" />
                                                                <label for="delete_per_@eachdoc.doc_id"></label>
                                                            }
                                                        </center>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="checkbox checkbox-success">
                                                        <center>
                                                            &nbsp;
                                                            @if (eachdoc.approve_per == true)
                                                            {
                                                                <input type="checkbox" id="approve_per_@eachdoc.doc_id" @bind="eachdoc.approve_check" disabled="@(act == "view")" />
                                                                <label for="approve_per_@eachdoc.doc_id"></label>
                                                            }
                                                        </center>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="checkbox checkbox-success">
                                                        <center>
                                                            &nbsp;
                                                            @if (eachdoc.print_per == true)
                                                            {
                                                                <input type="checkbox" id="print_per_@eachdoc.doc_id" @bind="eachdoc.print_check" disabled="@(act == "view")" />
                                                                <label for="print_per_@eachdoc.doc_id"></label>
                                                            }
                                                        </center>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="checkbox checkbox-success">
                                                        <center>
                                                            &nbsp;
                                                            @if (eachdoc.export_per == true)
                                                            {
                                                                <input type="checkbox" id="export_per_@eachdoc.doc_id" @bind="eachdoc.export_check" disabled="@(act == "view")" />
                                                                <label for="export_per_@eachdoc.doc_id"></label>
                                                            }
                                                        </center>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                }
                            </table>
                        </div>
                    </div>
                    <div>&nbsp;</div>
                    <div>&nbsp;</div>
                    <div class="row">
                        <div class="col-xs-12 text-center">
                            <div class="form-group">
                                <a id="hplback" href="@hplback_NavigateUrl" class="btn btnred" style="width:100px;">กลับ</a>
                                &nbsp;&nbsp;&nbsp;
                                @if (btnSave_Visible)
                                {
                                    <button id="btnSave" class="btn btnyellow" style="width:100px;" @onclick="btnSave_Click">บันทึก</button>
                                }
                            </div>
                        </div>
                    </div>
                    <div>&nbsp;</div>
                    <div>&nbsp;</div>
                </div>
                <div class="col-md-1">&nbsp;</div>
            </div>
            <div>&nbsp;</div>
        </div>
    </div>
}

@code {
    Base64 base64 = new Base64();
    //PARAM
    [Parameter]
    [SupplyParameterFromQuery]
    public string? keyword { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? field { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? status { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? act { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? id { get; set; }

    List<AuthorizeMenuSearchData> Authorize_Menu = new List<AuthorizeMenuSearchData>();
    List<AuthorizeMenuDocumentSearchData> Authorize_Menu_Document = new List<AuthorizeMenuDocumentSearchData>();
    List<ListItem> position_Items = new List<ListItem>();

    public string session_user; // session

    //from url param
    public string Menu_Name;
    public string doc_name;
    public string hplback_NavigateUrl;
    public string hdfact;

    //after loading
    public string username_Text;
    public string password_Text;
    public string password_Text_again;
    public string fullname_Text;
    public string phone_Text;
    public string position_SelectedValue;
    public string email_Text;
    public string status_SelectedValue = "active";

    //html
    public bool username_ReadOnly;
    public bool fullname_ReadOnly;
    public bool phone_ReadOnly;
    public bool email_ReadOnly;
    public bool btnSave_Visible = false;
    public bool diverror_Visible = false;
    public string lblMsg;
    public bool divuser_Visible = false;
    public bool divpass_Visible = false;
    public bool divreset_Visible = false;
    public bool position_disable = false;
    public bool status_disable = false;

    public async Task Authorize()
    {
        int chk_authorize1 = await secure.Check_Menu_Authorize("3");
        int chk_authorize2 = await secure.Check_Document_Authorize("4", "3");
        if (chk_authorize1 == 0 || chk_authorize2 == 0)
        {
            IsAuthorizedSucceed = false;
        }
        else
        {
            IsAuthorizedSucceed = true;
            int Create_Per = await secure.Check_Document_Authorize("4", "1");
            int Edit_Per = await secure.Check_Document_Authorize("4", "2");
            if (Create_Per == 1 || Edit_Per == 1)
            {
                btnSave_Visible = true;
                StateHasChanged();
            }
        }
        return;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (!(await secure.Page_Init()))
            {
                return;
            }
            await Authorize();
            session_user = await sessionStorage.GetItemAsync<string>("UserID");


            position_Items.Add(new ListItem("DSM", "DSM"));
            position_Items.Add(new ListItem("DSR", "DSR"));
            position_Items.Add(new ListItem("OBAM", "OBAM"));
            position_Items.Add(new ListItem("SHELL", "SHELL"));
            position_SelectedValue = position_Items[0].value;

            int i = 0;
            string url = "";
            string paremeter = "?keyword=" + keyword
                                + "&field=" + field
                                + "&status=" + status;
            url = "userlist" + paremeter;
            hplback_NavigateUrl = url;
            //ViewState["url"] = url;
            hdfact = act;
            if (act == "view")
            {
                username_ReadOnly = true;
                fullname_ReadOnly = true;
                phone_ReadOnly = true;
                position_disable = true;
                email_ReadOnly = true;
                status_disable = true;
                btnSave_Visible = false;
            }
            else if (act == "add")
            {
                divuser_Visible = true;
                divpass_Visible = true;
            }
            else if (act == "edit")
            {
                username_ReadOnly = true;
                divreset_Visible = true;
            }
            GetData();
            StateHasChanged();
        }
        //await base.OnAfterRenderAsync(firstRender);
    }
    void GetData()
    {
        using (var db = new SHELLREGContext())
        {
            var finding_user = db.Users.Where(t => t.UserId == id);
            if (finding_user.Any())
            {
                var founded_user = finding_user.First();
                if (founded_user.Position == "Admin")
                {
                    position_Items.Add(new ListItem("Admin", "Admin"));
                }
                username_Text = founded_user.Username;
                fullname_Text = founded_user.Fullname;
                phone_Text = founded_user.Phone;
                position_SelectedValue = founded_user.Position;
                email_Text = founded_user.Email;
                status_SelectedValue = founded_user.Status;
            }
            var Authorize_Menu__ = (
                from am in db.AuthorizeMenus//.Where(t => t.InvoiceNo == hdfInvoiceNo)
                from amu in db.AuthorizeMenuUsers.Where(t => t.UserId == id && t.MenuUsed == true && t.MenuId == am.MenuId).DefaultIfEmpty()
                select new AuthorizeMenuSearchData()
                    {
                        Menu_id = am.MenuId,
                        Menu_Name = am.MenuName,
                        Menu_Main = am.MenuMain,
                        Menu_Position = am.MenuPosition,
                        Menu_Used = amu.MenuUsed,
                    }
            ).ToList();
            Authorize_Menu = Authorize_Menu__;

            foreach (var eachmenu in Authorize_Menu)
            {
                var doc = (
                    from a_doc in db.AuthorizeDocuments.Where(t => t.DocUsed == true)
                    from a_menudoc in db.AuthorizeMenuDocuments.Where(t => t.DocId == a_doc.DocId && t.MenuId == eachmenu.Menu_id)
                    from a_doc_user in db.AuthorizeDocumentUsers.Where(t => t.DocId == a_doc.DocId && t.UserId == id).DefaultIfEmpty()

                    select new AuthorizeMenuDocumentSearchData()
                        {
                            doc_id = a_doc.DocId,
                            doc_name = a_doc.DocName,

                            create_per = a_doc.CreatePer,
                            edit_per = a_doc.EditPer,
                            view_per = a_doc.ViewPer,
                            delete_per = a_doc.DeletePer,
                            approve_per = a_doc.ApprovePer,
                            print_per = a_doc.PrintPer,
                            export_per = a_doc.ExportPer,

                            create_use = a_doc_user.CreatePer == true,
                            edit_use = a_doc_user.EditPer == true,
                            view_use = a_doc_user.ViewPer == true,
                            delete_use = a_doc_user.DeletePer == true,
                            approve_use = a_doc_user.ApprovePer == true,
                            print_use = a_doc_user.PrintPer == true,
                            export_use = a_doc_user.ExportPer == true,

                            create_check = a_doc_user.CreatePer == true && a_doc.CreatePer == true,
                            edit_check = a_doc_user.EditPer == true && a_doc.EditPer == true,
                            view_check = a_doc_user.ViewPer == true && a_doc.ViewPer == true,
                            delete_check = a_doc_user.DeletePer == true && a_doc.DeletePer == true,
                            approve_check = a_doc_user.ApprovePer == true && a_doc.ApprovePer == true,
                            print_check = a_doc_user.PrintPer == true && a_doc.PrintPer == true,
                            export_check = a_doc_user.ExportPer == true && a_doc.ExportPer == true,

                        }
                ).ToList();
                eachmenu.doclist = doc;
            }
        }
    }

    void btnSave_Click()
    {
        if (string.IsNullOrWhiteSpace(username_Text))
        {
            this.OpenErrorDialog("กรุณากรอกรหัสผู้ใช้");
            return;
        }
        if (hdfact == "add")
        {
            if (string.IsNullOrWhiteSpace(password_Text))
            {
                this.OpenErrorDialog("กรุณากรอกรหัสผ่าน");
                return;
            }
            if (password_Text.Length < 6)
            {
                this.OpenErrorDialog("กรุณากรอกรหัสผ่าน 6 ตัวขึ้นไป");
                return;
            }
            if (string.IsNullOrWhiteSpace(password_Text_again))
            {
                this.OpenErrorDialog("กรุณากรอกรหัสผ่านอีกครั้ง");
                return;
            }
            if (password_Text != password_Text_again)
            {
                this.OpenErrorDialog("กรอกรหัสผ่านไม่ถูกต้อง");
                return;
            }
        }
        if (string.IsNullOrWhiteSpace(fullname_Text))
        {
            this.OpenErrorDialog("กรุณากรอก ชื่อ-นามสกุล");
            return;
        }
        CanSave();
    }

    void CanSave()
    {
        using (var db = new SHELLREGContext())
        {
            try
            {
                using (var dbContextTransaction = db.Database.BeginTransaction())
                {
                    try
                    {
                        if (act == "add")
                        {
                            db.Users.Add(new User()
                                {
                                    UserId = username_Text,
                                    Username = username_Text,
                                    Password = base64.base64Encode(password_Text),
                                    Fullname = fullname_Text,
                                    Phone = phone_Text,
                                    Email = email_Text,
                                    Position = position_SelectedValue,
                                    Status = status_SelectedValue,
                                    UserUse = true,
                                });
                            db.SaveChanges();
                        }
                        else if (act == "edit")
                        {
                            var finding = db.Users.Where(t => t.UserId == id);
                            if (finding.Any())
                            {
                                var founded = finding.First();
                                founded.Fullname = fullname_Text;
                                founded.Phone = phone_Text;
                                founded.Email = email_Text;
                                founded.Position = position_SelectedValue;
                                founded.Status = status_SelectedValue;
                                db.SaveChanges();
                            }
                        }

                        var finding_user_menu = db.AuthorizeMenuUsers.Where(t => t.UserId == id);
                        if (finding_user_menu.Any())
                        {
                            foreach (var each_deleting in finding_user_menu)
                            {
                                db.AuthorizeMenuUsers.Remove(each_deleting);
                            }
                            db.SaveChanges();
                        }

                        var finding_user_doc = db.AuthorizeDocumentUsers.Where(t => t.UserId == id);
                        if (finding_user_doc.Any())
                        {
                            foreach (var each_deleting in finding_user_doc)
                            {
                                db.AuthorizeDocumentUsers.Remove(each_deleting);
                            }
                            db.SaveChanges();
                        }

                        foreach (var A_M in Authorize_Menu)
                        {
                            if (A_M.Menu_Used == true)
                            {
                                db.AuthorizeMenuUsers.Add(new AuthorizeMenuUser()
                                    {
                                        UserId = id,
                                        MenuId = A_M.Menu_id.Value,
                                        MenuUsed = true,
                                    });
                                foreach (var eachdoc in A_M.doclist)
                                {
                                    db.AuthorizeDocumentUsers.Add(new AuthorizeDocumentUser()
                                        {
                                            UserId = id,
                                            DocId = eachdoc.doc_id.Value,
                                            CreatePer = eachdoc.create_check,
                                            EditPer = eachdoc.edit_check,
                                            ViewPer = eachdoc.view_check,
                                            DeletePer = eachdoc.delete_check,
                                            ApprovePer = eachdoc.approve_check,
                                            PrintPer = eachdoc.print_check,
                                            ExportPer = eachdoc.export_check,
                                        });
                                }
                                db.SaveChanges();
                            }
                        }

                        dbContextTransaction.Commit();

                        if (id == session_user)
                        {
                            Navigation.NavigateTo("/restart");
                        }
                        else
                        {
                            Navigation.NavigateTo(hplback_NavigateUrl);
                        }
                    }
                    catch (Exception ex)
                    {
                        dbContextTransaction.Rollback();
                        throw ex;
                    }
                }
            }
            catch (Exception ex)
            {
                diverror_Visible = true;
                lblMsg = ex.Message;
                return;
            }
        }
    }

    void btnReset_Click()
    {
        try
        {
            using (var db = new SHELLREGContext())
            {
                var filter = db.Users.Where(t => t.UserId == id);
                if (filter.Any())
                {
                    var founded = filter.First();
                    founded.Password = base64.base64Encode(id);
                    founded.UserUse = false;
                }
                db.SaveChanges();
            }

            Navigation.NavigateTo(hplback_NavigateUrl);
        }
        catch (Exception ex)
        {
            diverror_Visible = true;
            lblMsg = ex.Message;
        }
    }
}



<ModalDialog @ref="modal" OnClose="@OnErrorDialogClose"></ModalDialog>
    @code {

    private ModalDialog modal { get; set; }
    private void OnErrorDialogClose(bool accepted)
    {
        //StateHasChanged();
    }
    private void OpenErrorDialog(string txt)
    {
        modal.Open(txt);
        //StateHasChanged();
    }
    }
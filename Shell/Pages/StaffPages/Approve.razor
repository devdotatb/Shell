

    <link href="/Resource/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/Resource/css/sb-admin.css" rel="stylesheet" type="text/css" />
    <link href="/Resource/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
    <link href="/Resource/css/cos.css" rel="stylesheet" type="text/css" />
    <link href="/Resource/css/bootstrap-radio.css" rel="stylesheet" type="text/css" />
<div class="login-page">
    <div class="container">
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6">
                <div class="login-page-img">
                    <img src="Resource/img/logo-shell-mobile.png" />
                </div>
                @if (divhave_Visible)
                {
                    <div class="login-page-desc" id="divhave">
                        <p class="text-center">ขออนุมัติการลงทะเบียน</p>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-4 doupadding"><span>ชื่อไลน์</span><span class="douright">:</span></div>
                                <div class="col-xs-8">@lblLineName</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-4 doupadding"><span>รหัส</span><span class="douright">:</span></div>
                                <div class="col-xs-8">@lblACode</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-4 doupadding"><span>ชื่อร้านค้า</span><span class="douright">:</span></div>
                                <div class="col-xs-8">@lblShopName</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-4 doupadding"><span>รหัสผู้ดูแล</span><span class="douright">:</span></div>
                                <div class="col-xs-8">@lblDSRID</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-4 doupadding"><span>เขต</span><span class="douright">:</span></div>
                                <div class="col-xs-8">@lblSite</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-4 doupadding"><span>ประเภท</span><span class="douright">:</span></div>
                                <div class="col-xs-8">@lblShopType</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-4 doupadding"><span>ประเภทย่อย</span><span class="douright">:</span></div>
                                <div class="col-xs-8">@lblTier</div>
                            </div>
                        </div>
                        @if (divapprove_Visible)
                        {
                            <div id="divapprove" visible="false">
                                <div>&nbsp;</div>
                                <p class="text-center">ท่านได้ทำการอนุมัติการลงทะเบียนแล้ว</p>
                                <div>&nbsp;</div>
                            </div>
                        }
                    </div>
                }
                @if (divcorrect_Visible)
                {
                    <div class="login-page-desc" id="divcorrect" visible="false">
                        <div>&nbsp;</div>
                        <div class="row">
                            <div class="col-xs-2"></div>
                            <div class="col-xs-8"><asp:Image id="Image1" ImageUrl="~/Resource/img/approve.png" class="img-responsive" /></div>
                            <div class="col-xs-2"></div>
                        </div>
                        <div>&nbsp;</div>
                        <p class="text-center">อนุมัติคำขอ<br />เรียบร้อยแล้ว</p>
                        <div>&nbsp;</div>
                    </div>
                }
                @if (divincorrect_Visible)
                {
                    <div class="login-page-desc" id="divincorrect" visible="false">
                        <div>&nbsp;</div>
                        <div class="row">
                            <div class="col-xs-2"></div>
                            <div class="col-xs-8"><asp:Image id="Image2" ImageUrl="~/Resource/img/reject.png" class="img-responsive" /></div>
                            <div class="col-xs-2"></div>
                        </div>
                        <div>&nbsp;</div>
                        <p class="text-center">ปฏิเสธ<br />คำขออนุมัติ</p>
                        <div>&nbsp;</div>
                    </div>
                }
            </div>
            <div class="col-md-3"></div>
        </div>
    </div>
</div>
@if (divhaved_Visible)
{
    <div class="footer" id="divhaved" visible="false">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-xs-1"></div>
                <div class="col-xs-5">
                    <div class="form-group">
                        <button id="btnIncorrect" class="btn btn-danger btn-block linkload" @onclick="@btnIncorrect_Click" style="background-color:#D42E12;border-color:#D42E12;">ปฏิเสธ</button>
                    </div>
                </div>
                <div class="col-xs-5">
                    <div class="form-group">
                        <button id="btnCorrect" class="btn btn-danger btn-block login-button" @onclick="@btnCorrect_Click" style="background-color:#F7D117;border-color:#F7D117;color:#58595B;">อนุมัติ</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>
}

@page "/approve/{acode_route?}"
@using System.Text
@using System.Web
@using Shell.Data
@using Shell.Model
@using Shell.Service
@inject IclsDefault my_clsDefault
@code {
    [Parameter]
    public string? acode_route { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? uid { get; set; }

    public bool divhave_Visible = true;
    public bool divapprove_Visible = false;
    public bool divcorrect_Visible = false;
    public bool divincorrect_Visible = false;
    public bool divhaved_Visible = false;

    public string? lblLineName;
    public string? lblACode;
    public string? lblShopName;
    public string? lblDSRID;
    public string? lblSite;
    public string? lblShopType;
    public string? lblTier;

    public string? hdfUID;
    public string? curr_date_full;
    public string? hdfLineName;
    public string? hdfUserID;
    // LINE
    string keyword = "";
    string jsondata = "", content = "";


    protected override void OnInitialized()
    {
        try
        {
            hdfUID = Encoding.UTF8.GetString(Convert.FromBase64String(uid));
            lblACode = acode_route;
            curr_date_full = DateTime.Now.ToString("dd/MM/") + DateTime.Now.Year + " " + DateTime.Now.ToString("HH:mm:ss");

            using (var db = new SHELLREGContext())
            {
                var query_user = db.Users.Where(t => t.LineUid == hdfUID);
                if (query_user.Any())
                {
                    var current_user = query_user.First();
                    hdfUserID = current_user.UserId;
                    string Position = current_user.Position;

                    var trdown = db.TradeOwners.Where(t => t.Acode == lblACode && (t.Dsmid == current_user.UserId || t.Dsrid == current_user.UserId || t.Obamid == current_user.UserId));

                    if (trdown.Any())
                    {
                        var current_trdown = trdown.First();
                        lblACode = current_trdown.Acode;
                        lblShopName = current_trdown.ShopName;
                        lblSite = current_trdown.SiteName;
                        lblShopType = current_trdown.ShopType;
                        lblTier = current_trdown.Tier;
                        lblLineName = current_trdown.LineName;
                        lblDSRID = current_trdown.Dsrid;
                        if (current_trdown.Status == "active")
                        {
                            divapprove_Visible = true;
                        }
                        else
                        {
                            if (Position == "OBAM" && current_trdown.RegisterCheck == true)
                            {
                                divhaved_Visible = true;
                            }
                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            //Response.Redirect("~/error");
        }
    }
    void btnCorrect_Click()
    {
        try
        {
            using (var db = new SHELLREGContext())
            {
                var trdown = db.TradeOwners.Where(t => t.Acode == lblACode);
                if (trdown.Any())
                {
                    var founded_tradeowner = trdown.First();
                    founded_tradeowner.Status = "active";
                    founded_tradeowner.UserEdit = hdfUserID;
                    founded_tradeowner.UserDate = curr_date_full;
                    db.SaveChanges();

                    divhave_Visible = false;
                    divhaved_Visible = false;
                    divcorrect_Visible = true;

                    // LINEE
                    var filter = db.TradeOwners.Where(t => t.Acode == lblACode);
                    if (filter.Any())
                    {
                        var founded = filter.First();
                        keyword = "ebl4-cQeII";//OBAM_Approve_TradeOwner_Success
                        DataParams Params = new DataParams();
                        Params.acode = lblACode;
                        Params.name = lblShopName;

                        DataLines datas = new DataLines();
                        datas.to = founded.LineUid;
                        datas.keyword_id = keyword;
                        datas.Params = Params;

                        jsondata = Newtonsoft.Json.JsonConvert.SerializeObject(datas).Replace("Params", "params");
                        try
                        {
                            content = my_clsDefault.LineDataReader(jsondata).ReadToEnd();
                            new LogSystemService().InsertLogSendLine("SEND", "OBAMApproveTradeOwnerCorrect", founded.LineUid, jsondata, content);
                        }
                        catch (Exception)
                        {
                            new LogSystemService().InsertLogSendLine("ERROR SEND", "OBAMApproveTradeOwnerCorrect", founded.LineUid, jsondata, "");
                        }
                        string DSMID = founded.Dsmid;
                        string DSRID = founded.Dsrid;
                        string UserID = "";
                        for (int i = 0; i < 2; i++)
                        {
                            if (i == 0)
                                UserID = DSMID;
                            if (i == 1)
                                UserID = DSRID;
                            keyword = "sW8ShiOCzt";//OBAM_Approve_Staff_Success

                            var selectLineUID_filter = db.Users.Where(t => t.UserId == UserID && t.RegisterCheck == true && !string.IsNullOrWhiteSpace(t.LineUid));
                            if (selectLineUID_filter.Any())
                            {
                                var selectLineUID = selectLineUID_filter.First();
                                Params = new DataParams();
                                Params.acode = lblACode;
                                Params.name = lblShopName;

                                datas = new DataLines();
                                datas.to = selectLineUID.LineUid;
                                datas.keyword_id = keyword;
                                datas.Params = Params;

                                jsondata = Newtonsoft.Json.JsonConvert.SerializeObject(datas).Replace("Params", "params");
                                try
                                {
                                    content = my_clsDefault.LineDataReader(jsondata).ReadToEnd();
                                    new LogSystemService().InsertLogSendLine("SEND", "OBAMApproveStaffCorrect", selectLineUID.LineUid, jsondata, content);
                                }
                                catch (Exception)
                                {
                                    new LogSystemService().InsertLogSendLine("ERROR SEND", "OBAMApproveStaffCorrect", selectLineUID.LineUid, jsondata, "");
                                }
                            }
                        }
                    }
                    else
                    {
                        this.OpenErrorDialog(string.Format("ไม่พบข้อมูล TradeOwners.Acode = {0}", lblACode));
                    }
                }
            }
        }
        catch (Exception ex)
        {
            this.OpenErrorDialog(ex.Message);
        }
    }
    void btnIncorrect_Click()
    {
        try
        {
            using (var db = new SHELLREGContext())
            {
                var trdown = db.TradeOwners.Where(t => t.Acode == lblACode);
                if (trdown.Any())
                {
                    var founded_tradeowner = trdown.First();
                    founded_tradeowner.Status = "reject";
                    founded_tradeowner.UserEdit = hdfUserID;
                    founded_tradeowner.UserDate = curr_date_full;
                    db.SaveChanges();

                    divhave_Visible = false;
                    divhaved_Visible = false;
                    divincorrect_Visible = true;

                    // LINEE
                    var filter = db.TradeOwners.Where(t => t.Acode == lblACode);
                    if (filter.Any())
                    {
                        var founded = filter.First();
                        keyword = "VfjOYdRRQg";//OBAM_Approve_TradeOwner_Reject
                        DataParams Params = new DataParams();
                        Params.acode = lblACode;
                        Params.name = lblShopName;

                        DataLines datas = new DataLines();
                        datas.to = founded.LineUid;
                        datas.keyword_id = keyword;
                        datas.Params = Params;

                        jsondata = Newtonsoft.Json.JsonConvert.SerializeObject(datas).Replace("Params", "params");
                        try
                        {
                            content = my_clsDefault.LineDataReader(jsondata).ReadToEnd();
                            new LogSystemService().InsertLogSendLine("SEND", "OBAMApproveTradeOwnerIncorrect", founded.LineUid, jsondata, content);
                        }
                        catch (Exception)
                        {
                            new LogSystemService().InsertLogSendLine("ERROR SEND", "OBAMApproveTradeOwnerIncorrect", founded.LineUid, jsondata, "");
                        }

                        string DSMID = founded.Dsmid;
                        string DSRID = founded.Dsrid;
                        string OBAMPhone = founded.ContactPhone;
                        string UserID = "";
                        for (int i = 0; i < 2; i++)
                        {
                            if (i == 0)
                                UserID = DSMID;
                            if (i == 1)
                                UserID = DSRID;
                            keyword = "zoPDAtZqAt";//OBAM_Approve_Staff_Reject
                            
                            var selectLineUID_filter = db.Users.Where(t => t.UserId == UserID && t.RegisterCheck == true && !string.IsNullOrWhiteSpace(t.LineUid));
                            if (selectLineUID_filter.Any())
                            {
                                var selectLineUID = selectLineUID_filter.First();
                                Params = new DataParams();
                                Params.acode = lblACode;
                                Params.name = lblShopName;
                                Params.phone = OBAMPhone;

                                datas = new DataLines();
                                datas.to = selectLineUID.LineUid;
                                datas.keyword_id = keyword;
                                datas.Params = Params;

                                jsondata = Newtonsoft.Json.JsonConvert.SerializeObject(datas).Replace("Params", "params");
                                try
                                {
                                    content = my_clsDefault.LineDataReader(jsondata).ReadToEnd();
                                    new LogSystemService().InsertLogSendLine("SEND", "OBAMApproveStaffIncorrect", selectLineUID.LineUid, jsondata, content);
                                }
                                catch (Exception)
                                {
                                    new LogSystemService().InsertLogSendLine("ERROR SEND", "OBAMApproveStaffIncorrect", selectLineUID.LineUid, jsondata, "");
                                }
                            }
                        }
                    }
                }
                else
                {
                    this.OpenErrorDialog(string.Format("ไม่พบข้อมูล TradeOwners.Acode = {0}", lblACode));
                }
            }
        }
        catch (Exception ex)
        {
            this.OpenErrorDialog(ex.Message);
        }
    }
    public class DataLines
    {
        public string to { get; set; }
        public string keyword_id { get; set; }
        public DataParams Params { get; set; }
    }
    public class DataParams
    {
        public string acode { get; set; }
        public string name { get; set; }
        public string phone { get; set; }
    }
}

<ModalDialog @ref="modal" OnClose="@OnErrorDialogClose"></ModalDialog>
    @code {

    private ModalDialog modal { get; set; }
    private void OnErrorDialogClose(bool accepted)
    {
        //StateHasChanged();
    }
    private void OpenErrorDialog(string txt)
    {
        modal.Open(txt);
        //StateHasChanged();
    }
    }
<!--masterpagereg-->
<style type="text/css">
    html {
        background: #FED000;
    }

    .footer {
        height: 75px;
        left: 0;
        bottom: 0;
        width: 100%;
        padding-top: 10px;
        background-color: #FFFFFF;
    }

    .footer-fixed {
        position: fixed;
    }

    input.login-button, input.login-button:hover, input.login-button:focus {
        font-weight: normal;
    }

    .login-page {
        margin-top: 0;
    }

    .login-page-desc {
        padding: 0;
    }

        .login-page-desc p {
            font-size: 20px;
            font-weight: bold;
        }

        .login-page-desc span {
            font-size: 18px;
        }

    .btn {
        padding: 12px;
        font-size: 18px;
    }

    .form-control {
        height: 34px;
        padding: 6px 12px;
    }

    .doupadding {
        padding-right: 0;
    }

    .douright {
        float: right;
    }
</style>

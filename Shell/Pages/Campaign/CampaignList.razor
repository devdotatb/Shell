@page "/campaignlist"

<div id="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 title-head">
                <h1><img src="Resource/img/config.png" alt="" />ข้อมูลแต้มสินค้า</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">รายการแคมเปญแต้มสินค้า</div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-6 rows">
                                        <div id="divdate" class="datepicker input-daterange input-group">
                                            <span class="input-group-addon first-text">จาก - ถึง<i class="fa fa-calendar ifrom" aria-hidden="true"></i></span>
                                            <DateRangePicker @bind-StartDate="StartDate" @bind-EndDate="EndDate" />
                                        </div>
                                    </div>
                                    <div class="col-md-3 rows">
                                        <div class="input-group">
                                            <select id="status" class="form-control" @bind="statusSelected">
                                                <option Value="active">active</option>
                                                <option Value="inactive">inactive</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 rows">
                                        <div class="input-group">
                                            <input type="text" id="keyword" class="form-control" placeholder="พิมพ์ค้นหา" @bind="SearchTxt" />
                                        </div>
                                    </div>
                                    <div class="col-md-3 rows">
                                        <div class="input-group">
                                            <select id="field_select" class="form-control" @bind="field_selected">
                                                <option Value="CampaignCode">รหัสแคมเปญ</option>
                                                <option Value="CampaignName">ชื่อแคมเปญ</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="row search">
                                    <div class="col-md-6">
                                        <input type="submit" value="ค้นหา" id="btnSearch" class="btn btn-success" @onclick="btnSearch_Click">
                                    </div>
                                    <div class="col-md-6">
                                        <input type="button" class="btn btn-default" value="เคลียร์" onclick="location.href='campaignlist';" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="table-page text-right form-inline">
                    <asp:HyperLink id="hplExport" runat="server" class="btn btn-default" Visible="false"><i class="glyphicon glyphicon-open-file"></i> นำข้อมูลออก</asp:HyperLink>&nbsp;&nbsp;&nbsp;
                    <asp:Button id="btnExport" runat="server" Text="นำข้อมูลออก" OnClick="btnExport_Click" class="hidden" />
                    <asp:HyperLink id="btnCreate" runat="server" Visible="false"><img src="Resource/img/icon-add.png" /></asp:HyperLink>
                </div>
            </div>
        </div>
        <PagingComponent TotalRow="searchData_iquery.Count()" ComponentPageNumber="pageNumber" ComponentPageSize="pageSize"
                         OnChange="@((args)=> PagingCalledBack(args.Item1,args.Item2))"></PagingComponent>
        <div class="row">
            <div class="col-md-12">
                <div id="no-more-tables">
                    <table class="table-bordered table-striped table-condensed tables">
                        <thead id="thContent">
                        <th width="20%">รหัสแคมเปญ</th>
                        <th width="30%">ชื่อแคมเปญ</th>
                        <th width="15%">วันที่เริ่มต้น</th>
                        <th width="15%">วันที่สิ้นสุด</th>
                        <th width="10%">สถานะ</th>
                        <th width="10%">คำสั่ง</th>
                        </thead>
                        <tbody id="tbContent">
                            @foreach (var each_data in searchDataPaged)
                            {
                                <tr>
                                    <td align="center"><a href="campaignedit?keyword=@(SearchTxt)&field=@(field_selected)&status=@(statusSelected)&start=@(StartDate.HasValue ? StartDate.Value.Date.ToString() : "")&end=@(EndDate.HasValue ? EndDate.Value.Date.ToString() : "")&act=view&id=@each_data.CampaignCode">@each_data.CampaignCode</a></td>
                                    <td>@each_data.CampaignName</td>
                                    <td>@each_data.StartDate</td>
                                    <td>@each_data.EndDate</td>
                                    <td align="center"><span style="color:Blue;">@each_data.Status</span></td>
                                    <td align="center"><asp:Literal id="Command" runat="server" Text="-" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <PagingComponent TotalRow="searchData_iquery.Count()" ComponentPageNumber="pageNumber" ComponentPageSize="pageSize"
                         OnChange="@((args)=> PagingCalledBack(args.Item1,args.Item2))"></PagingComponent>
    </div>
</div>

@using BlazorDateRangePicker
@inject IJSRuntime jsRuntime
@using Shell.Data
@using Shell.Model

@code {
    //PARAM
    [Parameter]
    [SupplyParameterFromQuery]
    public string? keyword { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? field { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? start { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? end { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? status { get; set; }

    [Inject]
    private IConfiguration configuration { get; set; }
    private int pageSize = 5;
    private int pageNumber = 1;
    private int totalPage;

    public List<CampaignListSearchData> searchData_iquery;
    public List<CampaignListSearchData> searchDataPaged;
    
    DateTimeOffset? StartDate { get; set; }
    DateTimeOffset? EndDate { get; set; }
    public string? SearchTxt;
    public string? field_selected = "CampaignCode";
    public string statusSelected = "active";


    protected override void OnInitialized()
    {
        this.pageSize = int.Parse(configuration["PageSize"]);

        if (!string.IsNullOrWhiteSpace(keyword))
            SearchTxt = keyword;
        if (!string.IsNullOrWhiteSpace(field))
            field_selected = field;
        if (!string.IsNullOrWhiteSpace(start))
            StartDate = DateTimeOffset.Parse(start);
        if (!string.IsNullOrWhiteSpace(end))
            EndDate = DateTimeOffset.Parse(end);
        if (!string.IsNullOrWhiteSpace(status))
            statusSelected = status;

        using (var db = new SHELLREGContext())
        {
            var query = this.QuerySearch(db);
            var filtered = this.Specify(query);
            this.SetData(filtered);
        }
    }
    IEnumerable<CampaignListSearchData> QuerySearch(SHELLREGContext db)
    {
        var query = (
            from cam in db.Campaigns.Where(t1 => !string.IsNullOrWhiteSpace(t1.CampaignCode))

            select new CampaignListSearchData()
                {
                    CampaignCode = cam.CampaignCode,
                    CampaignName = cam.CampaignName,
                    StartDate = cam.StartDate,
                    EndDate = cam.EndDate,
                    Status = cam.Status,
                }
        );
        return query.AsEnumerable();
    }

    IEnumerable<CampaignListSearchData> Specify(IEnumerable<CampaignListSearchData> query)
    {
        var filtered = query;
        if (!string.IsNullOrWhiteSpace(SearchTxt))
        {
            switch (field_selected)
            {
                case "CampaignCode":
                    {
                        filtered = filtered.Where(t => t.CampaignCode.Contains(SearchTxt));
                        break;
                    }
                case "CampaignName":
                    {
                        filtered = filtered.Where(t => t.CampaignName.Contains(SearchTxt));
                        break;
                    }
                default:
                    {
                        break;
                    }
            }
        }
        if (!string.IsNullOrWhiteSpace(statusSelected))
        {
            filtered = filtered.Where(t => t.Status.Contains(statusSelected));
        }
        if (StartDate != null)
        {
            filtered = filtered.Where(t => !string.IsNullOrWhiteSpace(t.StartDate));
            filtered = filtered.Where(t => DateTimeOffset.Parse(t.StartDate) >= StartDate.Value.Date);
        }
        if (EndDate != null)
        {
            filtered = filtered.Where(t => !string.IsNullOrWhiteSpace(t.EndDate));
            filtered = filtered.Where(t => DateTimeOffset.Parse(t.EndDate) <= EndDate.Value.Date);
        }
        return filtered;
    }

    void SetData(IEnumerable<CampaignListSearchData> query)
    {
        this.pageNumber = 1;
        this.searchData_iquery = query.ToList();
        this.totalPage = (int)Math.Ceiling(query.Count() / (pageSize * 1.00));
        this.searchDataPaged = this.searchData_iquery.Skip((pageNumber - 1) * pageSize).Take(pageSize).ToList();
    }

    void btnSearch_Click()
    {
        using (var db = new SHELLREGContext())
        {
            var query = this.QuerySearch(db);
            var filtered = this.Specify(query);
            this.SetData(filtered);
        }
    }


    void PagingCalledBack(int PageChage, bool isSliding)
    {
        if (isSliding)
        {
            pageNumber = PageChage;
        }
        else
        {
            pageNumber += PageChage;
        }
        this.searchDataPaged = this.searchData_iquery.Skip((pageNumber - 1) * pageSize).Take(pageSize).ToList();
    }
}
